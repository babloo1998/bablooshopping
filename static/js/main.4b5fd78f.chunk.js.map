{"version":3,"sources":["Components/Selectsize.js","Components/Radiobutton.js","Components/Carddata.js","Action.js","Components/Card.js","Components/Cartdata.js","Components/Header.js","Components/Cart.js","Components/AddToCart/Addtocart.js","Components/Details.js","Components/form/formHandler.js","Components/form/form.js","Components/invoice.js","App.js","Components/Data.js","Reducer.js","cartreducer.js","productReducer.js","store.js","BillingAddress.js","index.js"],"names":["SelectSize","handleChangeSize","this","props","react_default","a","createElement","onChange","className","value","Component","Radiobutton","_this$props","name","colorButtonToggle","imageKeys","handleChangeColor","checkmarkRadioStyle","background","console","log","storedProducts","map","item","i","key","onClick","type","e","concat","style","backgroundColor","connect","state","Reducer","storeProducts","Carddata","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","stopPropagation","onClickHandler","handleAddToCart","ToastsStore","success","colorButton","setState","displayColorButton","btn","Components_Radiobutton","Selectsize","lib","position","ToastsContainerPosition","BOTTOM_CENTER","store","addProduct","data","clearProducts","deleteProduct","id","Card","gettingimgid","target","clickid","size","selectedRadio","product","color","defineProperty","preventDefault","_this$props$product","price","inCart","quantity","productname","defaultcolor","_this2","imageRender","images","keys","class","react_router_dom","to","src","alt","Components_Carddata","dispatch","Cartdata","deleteCartProduct","Swal","fire","title","text","cart","length","scope","colspan","cartreducer","Header","mouseEnter","isMouseInside","mouseLeave","cartNotify","react_notification_badge_lib_default","count","effect","Effect","SCALE","onMouseEnter","onMouseLeave","Components_Cartdata","Cart","Fragment","Components_Header","Components_Card","Addtocart","click","calTotal","totAmount","total","emptycart","mixin","toast","showConfirmButton","timer","backtocart","history","push","n","then","checkout","updatecart","update","handleAddQuantity","increment","handleSubtractQuantity","decrement","updatesize","updatecolor","Breadcrumb_default","Item","active","disabled","Details","cartAction","intId","image","ownProps","match","params","parseInt","productReducer","find","initialValues","username","email","city","address","zipcode","country","validateEmail","error","test","validateName","validateZip","FieldLevelValidationForm","handleSubmit","values","_ref","resetForm","billingAction","handleShippingAddressCheckbox","setFieldValue","dist","onSubmit","render","_ref2","errors","validate","component","React","mapDispatchToProps","Invoice","handleClick","borderBottom","paddingBottom","BillingAddress","tempData","delete","App","react_router","exact","path","Form","detailProduct","Blue","Red","Yellow","initialState","arguments","undefined","action","cartproducts","forEach","cp","temp","toConsumableArray","itemsFiltered","filter","findItem","rootReducer","combineReducers","objectSpread","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.4b5fd78f.chunk.js","sourcesContent":["import React , { Component } from 'react';\n\n\nclass SelectSize extends Component{\n    render(){\n        let {handleChangeSize} = this.props;\n        return(\n            <select onChange={handleChangeSize} className='sizeselection'>\n                <option value=\"Small\">Small</option>\n                <option value=\"Medium\">Medium</option>\n                <option value=\"Large\">Large</option>\n            </select>\n        )\n    }\n}\n\nexport default SelectSize;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n\nclass Radiobutton extends Component {\n    \n    render() {\n        const { name, colorButtonToggle, imageKeys, handleChangeColor} = this.props;\n        let checkmarkRadioStyle = {\n            \"background\": imageKeys\n        }\n\n        console.log(\"defaullt color===========>\",this.props.storedProducts);\n\n        console.log('checkmark readio style',checkmarkRadioStyle)\n        return (\n            <div className=\"radio\">\n                <ul>\n                    {\n                        checkmarkRadioStyle.background.map((item,i) => {\n                                return(\n                                    <li key={i} onClick={colorButtonToggle}>\n                                        <label className=\"radio-container\">\n                                        <input\n                                            className=\"radio-button\"\n                                            type=\"radio\"\n                                            onClick={(e) => handleChangeColor(e)}\n                                            value={item}    \n                                            name={`${name} radio`}/>\n                                            <span style = {{backgroundColor: item}} className=\"checkmark\"></span>\n                                        </label>\n                                    </li>\n                                )\n                            }\n                        )\n                    }\n                </ul>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    storedProducts: state.Reducer.storeProducts,\n})\n\nexport default connect(mapStateToProps)(Radiobutton);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport SelectSize from './Selectsize';\nimport Radiobutton from './Radiobutton';\nimport {ToastsContainer, ToastsStore , ToastsContainerPosition} from 'react-toasts';\n\nclass Carddata extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayColorButton: false,\n        }\n    }\n    handleChangeColor =(e) =>{\n        e.stopPropagation();\n        this.props.handleChangeColor(e);\n    }\n\n    onClickHandler = (e) => {\n            this.props.handleAddToCart(e);\n            ToastsStore.success(\"Product, successfully added to cart\")\n    }\n\n    \n    colorButton = (e) => {\n        e.stopPropagation();\n        this.setState({\n            displayColorButton: !this.state.displayColorButton\n        });\n        console.log(\"CButton\", this.state.displayColorButton);\n\n    }\n    render() {\n        const { name, imageKeys, handleChangeSize, handleChangeColor} = this.props;\n        let btn = this.state.displayColorButton ? \"displayBlock\" : \"hideBlock\";\n        return (\n            <div>\n                <div className={`${btn} cartmenu`}>\n                    <Radiobutton\n                        handleChangeColor={(e) => handleChangeColor(e)}\n                        name={name}\n                        imageKeys={imageKeys}\n                        colorButtonToggle={this.colorButton}\n                    />\n                </div>\n                <div>\n                    <SelectSize\n                        handleChangeSize={(e) => handleChangeSize(e)}\n                    />\n                </div>\n                <div>\n                    <button type='button' value='Add To Cart' className='btn add-btn button-card'\n                     onClick={this.onClickHandler}>\n                        ADD TO CART\n                    </button>\n                    <ToastsContainer \n                    position={ToastsContainerPosition. BOTTOM_CENTER} \n                    store={ToastsStore} \n                    />\n                </div>\n            </div>\n\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    return{\n        storedProducts: state.Reducer.storeProducts\n    }\n}\n\nexport default connect(mapStateToProps)(Carddata);\n","export const cartAction = (data) =>{ \n    console.log(\"---Shopping Cart---\");\n    console.log('Data received by  Action--->', data);\n    return{\n            type: 'PRODUCT_INFO',\n            data\n        }\n}\n\nexport const addProduct = (data) =>{ \n    console.log(\"---Shopping Cart---\");\n    console.log('Data received by addProduct Action--->', data);\n    return{\n            type: 'ADD_TO_CART',\n            data\n        }\n}\nexport const clearProducts = (data) =>{\n    console.log(\"---Shopping Cart---\");\n    console.log('Data received by clearProducts Action--->', data);\n    return {\n        type : 'CLEAR_PRODUCTS',\n        data\n    }\n}\n\nexport const deleteProduct = (id) =>{\n    console.log(\"---Shopping Cart---\");\n    console.log('Data received by deleteProduct Action--->', id );\n    return{\n        type : 'DELETE_PRODUCT',\n        id\n    }\n}\n\nexport const increment = (data) =>{\n    console.log(\"---Shopping Cart---\");\n    console.log('Data received by increment quantity Action--->', data);\n    return {\n        type : 'INCREMENT',\n        data\n    }\n}\n\nexport const decrement = (data) =>{\n    console.log(\"---Shopping Cart---\");\n    console.log('Data received by increment quantity Action--->', data);\n    return {\n        type : 'DECREMENT',\n        data\n    }\n}\nexport const updatecart = (id) =>{\n    console.log(\"---Shopping Cart---\");\n    console.log('Data received by deleteProduct Action--->', id );\n    return{\n        type : 'UPDATE_CART',\n        id\n    }\n}\n\nexport const updatesize = (data) =>{\n    console.log(\"---Shopping Cart---\");\n    console.log('Data received by update Action--->', data );\n    return{\n        type : 'SIZE_UPDATE',\n        data\n    }\n}\n\nexport const billingAction = (data) => {\n    console.log(\"billing Action Called\");\n    return {\n      type: \"CHECKOUT\",\n      data\n    }\n  }\n  export const productInfo = (data) => {\n    console.log(\"---Shopping Cart---\");\n    console.log('Data received by productInfo Action--->', data);\n    return {\n    type: 'PRODUCT_INFO',\n    data\n    }\n    }\n\nexport const updatecolor = (data) =>{\n    console.log(\"---Shopping Cart---\");\n    console.log('Data received by update Action--->', data );\n    return{\n        type : 'COLOR_UPDATE',\n        data\n    }\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Carddata from './Carddata';\nimport {addProduct} from '../Action';\n\nclass Card extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            clickid:1,\n            size: 'Small',\n            quantity: 1,\n            color: props.product.defaultcolor,\n        }\n    }\n    gettingimgid =  (e) => {\n        console.log(\"details id------>\", e.target.id)\n        this.setState({\n            clickid : e.target.id\n        })\n        console.log(\"image -- id\",this.state.clickid);\n    }\n    handleChangeSize = (e) => {\n        console.log(\"Selected size\", e.target.value);\n        this.setState({\n            size: e.target.value\n        })\n\n    }\n    handleChangeColor = (e) => {\n        let { name } = this.props.product;\n        let selectedRadio = name + \" radio\";\n        console.log(\"radio button \", e.target.value);\n        if (e.target.name === selectedRadio) {\n            this.setState({\n                color: e.target.value,\n            })\n        }\n        this.setState({\n            [e.target.name]: e.target.value,\n        })\n    }\n    handleAddToCart = (e) => {\n        e.preventDefault();\n        let { addProduct } = this.props;\n        let { id, name, price, inCart } = this.props.product;\n        console.log(\"AddProduct\", addProduct);\n        this.setState({\n            quantity: this.state.quantity + 1\n        });\n        addProduct({\n            id: id,\n            productname: name,\n            price: price,\n            inCart: inCart,\n            quantity: this.state.quantity,\n            size: this.state.size,\n            color: this.state.color\n        });\n    }\n    \n    render() {\n\n        let { product } = this.props;\n        let imageRender = this.props.images;\n        let imageKeys = Object.keys(this.props.images[0]);\n        return (\n            <div class=\"col-9 mx-auto col-md-6 col-lg-4 my-3 cardcontainer\">\n                <div class=\"card\">\n                    <div className=\"img-container m-auto\">\n                        <Link to={`/details/${product.id}`}>\n                            {\n                                imageKeys.map((item, i) => {\n                                    return (\n                                        this.state.color === item ?\n                                            <div key={i} className=\"image container\" onClick={this.gettingimgid}>\n                                                <img src={imageRender[0][item]} alt=\"shirt\" className=\"card-img-top productimage\"  />\n                                                    {/*                                                \n                                                    <div className=\"middle\">\n                                                    <div className=\"text\">VIEW</div>\n                                                </div> */}\n                                            </div> : null\n\n                                    )\n                                })\n                            }\n                        </Link>\n                        <div className={`${product.name} buttonNav`}>\n                            <Carddata\n                                name={product.name}\n                                imageKeys={imageKeys}\n                                handleChangeSize={this.handleChangeSize}\n                                handleChangeColor={this.handleChangeColor}\n                                handleAddToCart={this.handleAddToCart}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"card-footer d-flex justify-content-between\">\n                        <p className=\"align-self-center\">{product.name}</p>\n                        <p>${product.price}</p>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    console.log(\"images\", state.Reducer.images);\n    return {\n        storedProducts: state.Reducer.storeProducts,\n        images: state.Reducer.images\n    }\n}\nconst mapDispatchToProps = (dispatch) => ({\n    addProduct : (data) => dispatch(addProduct(data))\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(Card);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { deleteProduct } from '../Action';\nimport Swal from 'sweetalert2';\nimport './Cardstyle.css';\n\nclass Cartdata extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            cart: true\n        }\n    }\n    deleteCartProduct = (id) => {\n        let { deleteProduct } = this.props;\n        deleteProduct(id);\n        Swal.fire({\n            type: 'error',\n            title: 'Deleted',\n            text: 'Product Deleted!',\n          })\n        \n    }\n    render() {\n        return (\n            <div className=\"cartData\">\n                {this.props.cart.length !== 0 ?\n                        <div className='producttable'>\n                            <table class=\"table table-bordered carttable\">\n                                <thead>\n                                    <tr>\n                                        <th scope=\"col\">ITEM</th>\n                                        <th scope=\"col\">QTY</th>\n                                        <th scope=\"col\" colspan=\"2\">COLOR</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        this.props.cart.map((item, i) =>\n                                            <tr key={i}>\n                                                <td className=\"tableData\">{item.productname}</td>\n                                                <td className=\"tableData\">\n                                                    {item.quantity}\n                                                </td>\n                                                <td>{item.color}\n                                                </td>\n                                                <td><i className=\"fas fa-times\" onClick={() => \n                                                    this.deleteCartProduct(item.id)\n                                                    }></i></td>\n                                            </tr>\n                                        )\n                                    }\n                                </tbody>\n                            </table>\n                        </div> :\n                        <div>\n                            <p>Cart is Empty</p>\n                        </div>\n                }\n                \n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state) => ({\n    cart: state.cartreducer,\n    storedProducts: state.Reducer.storeProducts,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    deleteProduct: (id) => dispatch(deleteProduct(id)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cartdata);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {Link} from 'react-router-dom';\nimport Cartdata from './Cartdata';\nimport {Effect} from 'react-notification-badge';\nimport NotificationBadge from 'react-notification-badge';\n\nclass Header extends Component {\n    getInitialState() {\n        return {\n            isMouseInside: false\n        };\n    }\n    constructor(props) {\n        super(props);\n        this.state = {\n            isMouseInside: false\n        }\n    }\n    mouseEnter = () => {\n        this.setState({ isMouseInside: true });\n    }\n    mouseLeave = () => {\n        this.setState({ isMouseInside: false });\n    }\n    render() {\n        let cartNotify = this.props.cartNotify\n        return (\n            <nav>\n                <Link to='/addtocart' className=\"ml-1\">\n                <span className=\"notificationBadge\">\n                    <NotificationBadge count={cartNotify.length || 0} effect={Effect.SCALE}/>\n                </span>\n\n\n                 \n                <div className='cartimg' onMouseEnter={this.mouseEnter} onMouseLeave={this.mouseLeave}>\n                    {/* <img src=\"./Assets/cart.svg\" alt=\"cart\" /> */}\n                    <i class=\"fas fa-shopping-cart fa-5x\">\n                    {this.state.isMouseInside ? <Cartdata /> : null}\n                    </i>\n                    \n                </div>\n                </Link>\n            </nav>\n        );\n    }\n}\n\nconst mapStateToProps = (state) =>{\n    return{\n        cartNotify : state.cartreducer||0,\n    }\n}\n\nexport default connect (mapStateToProps)(Header);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Card from './Card';\nimport Header from './Header';\n\n\nclass Cart extends Component {\n    render() {\n        let { storedProducts } = this.props;\n        return (\n            <React.Fragment>\n                <div className=\"shopheading d-flex justify-content-between\">\n                    <h2 className=\"p-3\">YOUR ONLINE STORE</h2>\n                    <Header/>\n                </div>\n                <div className=\"py-5\">\n                    <div>\n                        <div className=\"container\">\n                            <div className=\"row\">\n                                {storedProducts.map(product => {\n                                    return <Card key={product.id} product={product} />;\n                                })}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    console.log(\"store\", state.Reducer.storeProducts);\n    return {\n        storedProducts : state.Reducer.storeProducts,\n    }\n}\n\nexport default connect(mapStateToProps)(Cart);\n","import React, { Component } from 'react';\n// import Checkout from '../Checkout/Checkout';\nimport { connect } from 'react-redux';\nimport Swal from 'sweetalert2'\n// import Logo from '../../../public/Assets/logo.png';\nimport { clearProducts, deleteProduct, updatesize, updatecolor, increment, decrement } from '../../Action';\nimport Breadcrumb from 'react-bootstrap/Breadcrumb'\nimport { Link } from 'react-router-dom'\n\nclass Addtocart extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            update: false,\n            total: 0,\n        }\n    }\n\n    click = () =>{\n        Swal.fire(\n            'Good job!',\n            'You clicked the button!',\n            'success'\n            )\n    }\n\n    componentDidMount(){\n        this.calTotal();\n    }\n\n    componentWillReceiveProps(){\n        this.calTotal();\n    }    \n    \n    calTotal = (e) =>{\n        let totAmount = 0;\n        console.log(\"thish is meee\");\n        this.props.cart.map((item, i) =>{\n               totAmount = totAmount+ (item.price*item.quantity)\n        }\n        )\n        this.setState({\n            total:totAmount\n        })\n    }\n\n\n    emptycart = (e) => {\n        let { clearProducts } = this.props;\n        e.preventDefault();\n        clearProducts();\n        const Toast = Swal.mixin({\n            toast: true,\n            position: 'top-end',\n            showConfirmButton: false,\n            timer: 3000\n          });\n          Toast.fire({\n            type: 'error',\n            title: 'Product deleted'\n          })\n    }\n\n    backtocart = () => {\n        this.props.history.push(\"/\");\n    }\n\n    n =()=> {\n        Swal.fire({\n            type:'info',\n            title: 'Cart is empty!!!',\n            // text: 'Cart Is Empty!',\n          }).then(() => {\n            this.props.history.push('/');\n            })\n        };\n\n    checkout = (e) => {\n        this.props.history.push(\"/Checkout\")\n    }\n\n    updatecart = (e) => {\n        this.setState({\n            update: true\n        })\n    }\n    deleteCartProduct = (id, total) => {\n        let { deleteProduct } = this.props;\n        deleteProduct(id);\n        \n    }\n\n    handleAddQuantity = (id, price) => {\n        this.props.increment({\n            id,\n            price\n        });\n    };\n    handleSubtractQuantity = (id, price) => {\n        this.props.decrement({\n            id,\n            price\n        });\n    };\n    handleChangeSize = (e) => {\n        let { updatesize } = this.props;\n        this.props.cart.map((item, id) => {\n            if (item.id == e.target.id) {\n                console.log(\"id------>\", id);\n                item.size = e.target.value;\n                id = item.id;\n                let size = item.size;\n                console.log(\"Updated Size---->\", item.size);\n                console.log(\"updated item id ------>\", item.id);\n                updatesize({\n                    id,\n                    size\n                });\n            }\n        }\n        )\n    }\n\n    handleChangeColor = (e) => {\n  \n        let { updatecolor } = this.props;\n        this.props.cart.map((item, id) => {\n            if (item.id == e.target.id) {\n                console.log(\"id------>\", id);\n                item.color = e.target.value;\n                id = item.id;\n                let color = item.color;\n                console.log(\"Updated Size---->\", item.color);\n                console.log(\"updated item id ------>\", item.id);\n                updatecolor({\n                    id,\n                    color\n                });\n            }\n        }\n        )\n  \n    }\n\n    render() {\n        // let {handleChangeSize} = this.props;\n        console.log(this.props);\n        return (\n            <div>\n                <div className=\"cart tableWrapper\">\n                    <div className=\"logo\">\n                        <span className='description'>Your Online Store</span>\n                    </div>\n                </div>\n\n            <Breadcrumb className=\"Breadcrumps\">\n            <Breadcrumb.Item ><Link to=\"/\">Home</Link></Breadcrumb.Item>\n            <Breadcrumb.Item active>Cart</Breadcrumb.Item>\n            </Breadcrumb>\n\n                <h2 className=\"shopping-cart-heading\">Your Shopping Cart</h2>\n                <div className='producttable'>\n                {this.props.cart.length !== 0 ?<section><table class=\"table table-bordered carttable\">\n                        <thead>\n                            <tr>\n                            <th scope=\"col\">PRODUCT IMAGE</th>\n                                <th scope=\"col\">ITEM</th>\n                                <th scope=\"col\">QTY</th>\n                                <th scope=\"col\">SIZE</th>\n                                <th scope=\"col\">COLOR</th>\n                                <th scope=\"col\" colspan=\"2\">PRICE</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                this.props.cart.map((item, i) =>\n                                    <tr key={i}>\n                                        <td className=\"imageTd\">\n                                            {item.color === \"Yellow\" ?\n                                                <img className=\"imageYrb\" src={\"Assets/img3.jpg\"} alt=\"yellow\" className=\"cart-img\" />\n                                                : null\n                                            }\n                                            {item.color === \"Blue\" ?\n                                                <img src={\"Assets/img1.jpg\"} alt=\"blue\" className=\"cart-img\" />\n                                                : null\n                                            }\n                                            {item.color === \"Red\" ?\n                                                <img src={\"Assets/img2.jpg\"} alt=\"red\" className=\"cart-img\" />\n                                                : null\n                                            }\n                                        </td>\n                                        <td className=\"tableData\">{item.productname}</td>\n                                        <td className=\"tableData quantity-btn\">\n                                            {this.state.update ?\n                                                item.quantity <= 1 ?\n                                                    <button disabled className=\"addSubBtn quantityselection\" type=\"button\">-</button>\n                                                    :\n                                                    <button className=\"addSubBtn quantityselection\" type=\"button\" onClick={() => this.handleSubtractQuantity(item.id, item.price)}>-</button>\n\n                                                : null\n                                            }\n                                            <span className=\"qty\">\n                                                {item.quantity}\n                                            </span>\n                                            {this.state.update ?\n                                                item.quantity < 10 ?\n                                                    <button className=\"addSubBtn quantityselection\" type=\"button\" onClick={() => this.handleAddQuantity(item.id, item.price)}>+</button>\n                                                    :\n                                                    <button className=\"addSubBtn quantityselection\" type=\"button\" disabled>+</button>\n                                                : null\n                                            }\n                                        </td>\n                                        <td>\n                                            {\n                                                !this.state.update ? item.size :\n                                                this.state.update ?\n                                                    <select id={item.id} name=\"Size\" onClick={this.handleChangeSize} className='sizeselection'>\n                                                        <option value=\"Small\">Small</option>\n                                                        <option value=\"Medium\">Medium</option>\n                                                        <option value=\"Large\">Large</option>\n                                                    </select> : null\n                                            }\n                                        </td>\n                                        <td>\n                                             {\n                                                !this.state.update ? item.color :\n                                                this.state.update ?\n                                                    <select id={item.id} name=\"Color\" onClick={this.handleChangeColor} className='sizeselection'>\n                                                <option value=\"Red\">Red</option>\n                                                <option value=\"Blue\">Blue</option>\n                                                <option value=\"Yellow\">Yellow</option>\n                                                     </select>:null\n                                            }\n                                        </td>\n                                        <td>${item.price * item.quantity}</td>\n                                        {\n                                            this.state.update ?\n                                                <td><i className=\"far fa-trash-alt\" style={{color: 'red'}} onClick={() => this.deleteCartProduct(item.id)}></i></td> : null\n                                        }\n\n                                    </tr>\n                                )\n                            }\n                        </tbody>\n                    </table>\n                    {/* <div className=\"order-total\">\n                    <div className=\"total-detail\">\n                        <p>Price:<span>${this.state.total}</span></p>\n                        <p>GST<important>(5%)</important>:<span>${this.state.total*0.05}</span></p>\n                        <p>Total Amount:<span>{this.state.total+(this.state.total*0.05)}</span></p>   \n                       </div>           \n               </div> */}\n                    <div className='buttoncontainer'>\n                        <button type=\"button\" class=\"btn btn-danger updatebutton\" onClick={this.updatecart}>Update Cart</button>\n                        <button type=\"button\" class=\"btn btn-danger emptybutton\" onClick={this.emptycart}>Empty Cart</button>\n                        <button type=\"button\" class=\"btn btn-danger continuebutton\" onClick={this.backtocart}>Continue Shopping</button>\n                        <button type=\"button\" class=\"btn btn-danger checkoutbutton\" onClick={this.checkout}>Go To Checkout</button>\n                    </div> </section>\n                    :\n                    <div>\n                        {/* <h3>Cart is Empty</h3>\n                        <button type=\"button\" class=\"btn btn-danger back-button\" onClick={this.backhandler}>Continue Shopping</button>\n                         */}\n                            {\n                                this.n()\n                            }\n                         {/*  */}\n                    </div>\n                    }\n                    \n                </div>\n                \n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    cart: state.cartreducer,\n    storedProducts: state.Reducer.storeProducts,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    clearProducts: (data) => dispatch(clearProducts(data)),\n    deleteProduct: (id) => dispatch(deleteProduct(id)),\n    updatesize: (data) => dispatch(updatesize(data)),\n    updatecolor: (data) => dispatch(updatecolor(data)),\n    increment: (data) => dispatch(increment(data)),\n    decrement: (data) => dispatch(decrement(data)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Addtocart);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addProduct } from '../Action';\nimport {Link} from 'react-router-dom';\nimport {Effect} from 'react-notification-badge';\nimport NotificationBadge from 'react-notification-badge';\n// import cartlogo from '/Assets/cart.svg';\nimport Breadcrumb from 'react-bootstrap/Breadcrumb'\nclass Details extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            size: 'Small',\n            color: 'Red',\n            quantity: 1,\n        }\n    }\n\n    cartAction  = (e) =>{\n        e.preventDefault();\n        this.props.history.push(\"/\");\n    }\n\n    handleAddToCart  = (e) => {\n        e.preventDefault();\n        let { addProduct } = this.props;\n        let { id, name, price, inCart } = this.props.product;\n        this.setState({\n            quantity: this.state.quantity + 1\n        });\n        addProduct({\n            id: id,\n            productname: name,\n            price: price,\n            inCart: inCart,\n            quantity: this.state.quantity,\n            size: this.state.size,\n            color: this.state.color\n        });\n    }\n    \n    render() {\n        let { intId, product } = this.props;\n        const { defaultcolor, name, price, image } = product;\n        let {id} = this.props.storedProducts;\n        let cartNotify = this.props.cartNotify; \n        return (\n            <>\n            <div className=\"detail-page-cart\">\n            </div>\n        <div className=\"detail-wrapper\">\n            <div className='detailspage'>\n            \n            <div className=\"shopheading d-flex justify-content-between\">\n                <h2 className=\"p-3\">YOUR ONLINE STORE</h2>\n                <div>\n                <Link to='/addtocart' className=\"ml-1\">\n                    <span className=\"notificationBadge\">\n                        <NotificationBadge className=\"badge\" count={cartNotify.length || 0} effect={Effect.SCALE}/>\n                    </span>\n                \n                 \n                <div className='cartimg'>\n                    {/* <img src=\"/Assets/cart.svg\" alt=\"cart\" /> */}\n                    <i class=\"fas fa-shopping-cart\"></i>\n                </div>\n                </Link>\n                </div>\n            </div>\n\n\n        <Breadcrumb className=\"Breadcrumps\">\n          <Breadcrumb.Item ><Link to=\"/\">Home</Link></Breadcrumb.Item>\n          <Breadcrumb.Item active>Data</Breadcrumb.Item>\n        </Breadcrumb>\n                <div className='productdescription'>\n                <div className=\"product-img\">\n                {\n                    this.props.storedProducts.map((item, i) => {\n                        if (item.id == intId) {\n                            return <div className='productimgcontainer'>\n                                {\n                                    console.log(\"Inside div checking color\", item.defaultcolor)\n                                }\n                                {item.defaultcolor === \"Yellow\" ?\n                                    <img className=\"imageYrb productimg\" src={\"/Assets/img3.jpg\"} alt=\"yellow\" />\n                                    : null\n                                }\n                                {item.defaultcolor === \"Blue\" ?\n                                    <img className=\"imageYrb productimg\" src={\"/Assets/img1.jpg\"} alt=\"blue\" />\n                                    : null\n                                }\n                                {item.defaultcolor === \"Red\" ?\n                                    <img className=\"imageYrb productimg\" src={\"/Assets/img2.jpg\"} alt=\"red\" />\n                                    : null\n                                }\n                            </div>\n                        }\n\n                    })\n                }\n                  \n                </div>\n                <div className=\"product-desc\">\n                <h2 className='ProductName'>{name}</h2>\n                    <p className='detailsdescription'><b>Material</b>: 100% Premium Combed Cotton, Single jersey, Pre-washed to impart a softer texture.Airy and perspire-friendly fabric that's best suited for Indian weather. “Proudly Made in India”<br />\n                        <b>Fit Type</b>: Unisex Regular Fit<br />\n                        <b>T-Shirt Colour </b>: {defaultcolor}<br />\n                        <b>Sleeve Type </b>: Full<br />\n                        <b>Occasion </b>: Classy Casual and Daily Wear. Good to go for any casual scene, express your style with these printed unisex t-shirts.\n                        Wash Care instructions: Do not bleach. Dry in shade. Wash with similar colours. Machine wash cold.\n                                    All designs are printed with skin-friendly chemicals and are tested for up to 10 washes, no bleeding.</p>\n                    <span className='detailsprice'> <b>${price}</b> <br /> (Including All Taxes)</span><br />\n                    \n                    <button type='button' className='btn add-btn cart-back' onClick={this.handleAddToCart}>ADD TO CART</button> \n                    \n                    \n                    \n                    <button type='button' className='btn add-btn cart-back' onClick={this.cartAction}>Buy More</button>        \n                </div>\n                    </div>\n                {/* // </div> */}\n                {/* // }) */}\n            </div>\n        </div>\n        </>\n        );\n        \n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    const id = ownProps.match.params.id;\n    const intId = parseInt(id);\n    const product = state.productReducer.storeProducts.find(item => item.id === intId);\n    return {\n        cartNotify : state.cartreducer||0,\n        cart: state.cartreducer,\n        storedProducts: state.Reducer.storeProducts,\n        images: state.Reducer.images,\n        product,\n        intId,\n    }\n}\nconst mapDispatchToProps = (dispatch) => ({\n    addProduct: (data) => dispatch(addProduct(data))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Details);","const initialValues = {\n    username: \"\",\n    email: \"\",\n    city: \"\",\n    address: \"\",\n    zipcode: \"\",\n    country : \"India\"\n}\nconst validateEmail = (value) => {\n    let error;\n    if (!value) {\n        error = 'Email Field is blank';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n        error = 'Invalid email address';\n    }\n    return error;\n}\n\nconst validateName = (value) => {\n    let error;\n    if (!value) {\n        error = 'Name field is blank';\n    }\n    return error;\n\n}\nconst validateZip=(value)=>{\n    let error;\n    if (!value){\n        error='Pincode is blank';\n    }else if (value.length !== 6){\n        error=\"Invalid pincode\"\n    }\n    return error;\n}\n\nexport {\n    initialValues,validateName,validateEmail,validateZip\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Formik, Form, Field } from \"formik/dist/index\";\nimport { billingAction } from \"../../Action\";\nimport { initialValues, validateName, validateEmail, validateZip } from \"./formHandler\";\nimport Swal from 'sweetalert2';\nimport Breadcrumb from 'react-bootstrap/Breadcrumb'\nimport { Link } from 'react-router-dom'\n\nclass FieldLevelValidationForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            update: false,\n            total: 0,\n          \n        }\n    }\n\n    componentDidMount(){\n        this.calTotal();\n    }\n\n    componentWillReceiveProps(){\n        this.calTotal();\n    }    \n\n  \n    \n    calTotal = (e) =>{\n        let totAmount = 0;\n        this.props.cart.map((item, i) =>{\n               totAmount = totAmount+ (item.price*item.quantity)\n        }\n        \n        )\n        this.setState({\n            total:totAmount\n        })\n    }\n\n\n\n    handleSubmit = (values, { resetForm } , e) => {\n        const { billingAction } = this.props;\n        billingAction(values);\n        resetForm();\n        this.props.history.push('/invoice');\n        Swal.fire(\n            'Order Placed!',\n            'Your order have been placed!',\n            'success'\n          );\n    }\n\n    handleShippingAddressCheckbox = (setFieldValue, values) => {\n        Object.keys(values).map(item => {\n            setFieldValue(['shipping_' + item], values[item]);\n        })\n    }\n\n    render() {\n       \n        return (\n            <>\n\n\n<div className=\"cart tableWrapper\">\n\n{/* <div className=\"logo\">\n    <span className='description'>Wines for web developers since 1999</span>\n</div> */}\n</div>\n\n                    <div className=\"logo\">\n                        <span className='description'>Your Online Store</span>\n                    </div>\n\n                    <h2 className=\"shopHeading mt-5\">Product-Detail</h2>\n\n                    <Breadcrumb className=\"Breadcrumps\">\n                            <Breadcrumb.Item ><Link to=\"/\">Home</Link></Breadcrumb.Item>\n                            <Breadcrumb.Item ><Link to=\"/addtocart\">Cart</Link></Breadcrumb.Item>\n                            <Breadcrumb.Item active>Checkout</Breadcrumb.Item>\n                    </Breadcrumb>\n                    <div className='producttable'>\n                    <table class=\"table table-bordered carttable\">\n                        <thead>\n                            <tr>\n                            <th scope=\"col\">PRODUCT IMAGE</th>\n                                <th scope=\"col\">ITEM</th>\n                                <th scope=\"col\">QTY</th>\n                                <th scope=\"col\">SIZE</th>\n                                <th scope=\"col\">COLOR</th>\n                                <th scope=\"col\" colspan=\"2\">PRICE</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                this.props.cart.map((item, i) =>\n                                    <tr key={i}>\n                                        <td className=\"imageTd\">\n                                            {item.color === \"Yellow\" ?\n                                                <img className=\"imageYrb\" src={\"Assets/img3.jpg\"} alt=\"yellow\" className=\"cart-img\" />\n                                                : null\n                                            }\n                                            {item.color === \"Blue\" ?\n                                                <img src={\"Assets/img1.jpg\"} alt=\"blue\" className=\"cart-img\" />\n                                                : null\n                                            }\n                                            {item.color === \"Red\" ?\n                                                <img src={\"Assets/img2.jpg\"} alt=\"red\" className=\"cart-img\" />\n                                                : null\n                                            }\n                                        </td>\n                                        <td className=\"tableData\">{item.productname}</td>\n                                        <td className=\"tableData quantity-btn\">\n                                            {this.state.update ?\n                                                item.quantity <= 1 ?\n                                                    <button disabled className=\"addSubBtn quantityselection\" type=\"button\">-</button>\n                                                    :\n                                                    <button className=\"addSubBtn quantityselection\" type=\"button\" onClick={() => this.handleSubtractQuantity(item.id, item.price)}>-</button>\n\n                                                : null\n                                            }\n                                            <span className=\"qty\">\n                                                {item.quantity}\n                                            </span>\n                                            {this.state.update ?\n                                                item.quantity < 10 ?\n                                                    <button className=\"addSubBtn quantityselection\" type=\"button\" onClick={() => this.handleAddQuantity(item.id, item.price)}>+</button>\n                                                    :\n                                                    <button className=\"addSubBtn quantityselection\" type=\"button\" disabled>+</button>\n                                                : null\n                                            }\n                                        </td>\n                                        <td>\n                                            {\n                                                !this.state.update ? item.size :\n                                                this.state.update ?\n                                                    <select id={item.id} name=\"Size\" onClick={this.handleChangeSize} className='sizeselection'>\n                                                        <option value=\"Small\">Small</option>\n                                                        <option value=\"Middle\">Middle</option>\n                                                        <option value=\"Large\">Large</option>\n                                                    </select> : null\n                                            }\n                                        </td>\n                                        <td>\n                                            {!this.state.update ? item.color :\n                                                this.state.update ?\n                                                    <select id={item.id} name=\"Color\" onClick={this.handleChangeColor} className='sizeselection'>\n                                                        <option value=\"Red\">Red</option>\n                                                        <option value=\"Blue\">Blue</option>\n                                                        <option value=\"Yellow\">Yellow</option>\n                                                    </select> : null\n                                            }\n                                        </td>\n                                        <td>${item.price * item.quantity}</td>\n                                        {\n                                            this.state.update ?\n                                                <td><i className=\"far fa-trash-alt\" style={{color: 'red'}} onClick={() => this.deleteCartProduct(item.id)}></i></td> : null\n                                        }\n\n                                    </tr>\n                                )\n                            }\n                        </tbody>\n                    </table>\n                    <div className=\"order-total\">\n                    <div className=\"total-detail\">\n                        <p>Price:<span>${this.state.total}</span></p>\n                        <p>GST<important>(5%)</important>:<span>${this.state.total*0.05}</span></p>\n                        <p>Total Amount:<span>{this.state.total+(this.state.total*0.05)}</span></p>   \n                    </div>           \n                    </div>\n                    </div>\n                <Formik\n                initialValues={initialValues}\n                onSubmit={this.handleSubmit}\n                render={({ errors, setFieldValue, values }) => (\n                    <div className=\"checkOutShop\">\n                        <Form className=\"form-details\">\n                            <h2 className=\"checkoutHead\">Checkout</h2>\n                            <h4 className=\"checkoutHead\">Your Details</h4>\n                            <fieldset className=\"billing\">\n                                <h5 className=\"billHead\">Billing</h5>\n                                <div>\n                                    <label className=\"checkLabel\">Name:</label>\n                                    <Field\n                                        className=\"input-fields\"\n                                        name=\"username\"\n                                        validate={validateName}\n                                    />\n                                    {errors.username &&\n\n                                        <span className=\"errors\">{errors.username}</span>\n\n                                    }\n                                </div>\n                                <div>\n                                    <label className=\"checkLabel\">Email:</label>\n                                    <Field\n                                        className=\"input-fields\"\n                                        name=\"email\"\n                                        validate={validateEmail}\n                                    />\n                                    {\n                                        errors.email &&\n\n                                        <span className=\"errors\">{errors.email}</span>\n\n                                    }\n                                </div>\n                                <div>\n                                    <label className=\"checkLabel\">City:</label>\n                                    <Field\n                                        className=\"input-fields\"\n                                        name=\"city\"\n                                    />\n                                </div>\n                                <div>\n                                    <label className=\"checkLabel\">Address:</label>\n                                    <Field\n                                        className=\"input-fields\"\n                                        name=\"address\"\n                                    />\n                                </div>\n                                <div>\n                                    <label className=\"checkLabel\">Zipcode:</label>\n                                    <Field\n                                        className=\"input-fields\"\n                                        name=\"zipcode\"\n                                        validate={validateZip}\n\n                                    />\n                                    {\n                                        errors.zipcode &&\n\n                                        <span className=\"errors\">{errors.zipcode}</span>\n\n                                    }\n                                </div>\n                                <div>\n                                    <label className=\"checkLabel\">Country:</label>\n                                    <Field component=\"select\" name=\"country\" className=\"country\">\n                                        <option value=\"India\">India</option>\n                                        <option value=\"Thailand\">Thailand</option>\n                                        <option value=\"USA\">USA</option>\n                                    </Field>\n                                </div>\n                            </fieldset>\n\n                            <div className=\"billSame\">\n                                <span>Same as Billing</span>\n                                <input\n                                    type=\"checkbox\"\n                                    onChange={(e) => this.handleShippingAddressCheckbox(setFieldValue, values)}\n                                    className=\"checkBilling\"\n                                />\n                            </div>\n\n                            <fieldset className=\"shipping\">\n                                <h5 className=\"shipHead\">Shipping</h5>\n                                <div>\n                                    <label className=\"checkLabel\">Name:</label>\n                                    <Field\n                                        className=\"input-fields\"\n                                        name=\"shipping_username\"\n                                        validate={validateName}\n                                    />\n                                    {errors.username &&\n                                        <span className=\"errors\">{errors.username}</span>\n\n                                    }\n                                </div>\n                                <div>\n                                    <label className=\"checkLabel\">Email:</label>\n                                    <Field\n                                        className=\"input-fields\"\n                                        name=\"shipping_email\"\n                                        validate={validateEmail}\n                                    />\n                                    {\n                                        errors.email &&\n\n                                        <span className=\"errors\">{errors.email}</span>\n\n                                    }\n                                </div>\n                                <div>\n                                    <label className=\"checkLabel\">City:</label>\n                                    <Field\n                                        className=\"input-fields\"\n                                        name=\"shipping_city\"\n                                    />\n                                </div>\n                                <div>\n                                    <label className=\"checkLabel\">Address:</label>\n                                    <Field\n                                        className=\"input-fields\"\n                                        name=\"shipping_address\"\n                                    />\n                                </div>\n                                <div>\n                                    <label className=\"checkLabel\">Zipcode:</label>\n                                    <Field\n                                        className=\"input-fields\"\n                                        name=\"shipping_zipcode\"\n                                        validate={validateZip}\n\n                                    />\n                                    {\n                                        errors.zipcode &&\n\n                                        <span className=\"errors\">{errors.zipcode}</span>\n\n                                    }\n                                </div>\n                                <div>\n                                    <label className=\"checkLabel\">Country:</label>\n                                    <Field component=\"select\" name=\"country\" className=\"country\">\n                                        <option value=\"India\">India</option>\n                                        <option value=\"Thailand\">Thailand</option>\n                                        <option value=\"USA\">USA</option>\n                                    </Field>\n                                </div>\n                            </fieldset>\n                            <button type=\"submit\" className=\"btn btn-danger btn-checkout\">\n                                Submit\n                            </button>\n                        </Form>\n                    </div>\n\n                    \n                )}\n\n            />\n                   \n            </>\n\n\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    cart: state.cartreducer,\n    storedProducts: state.Reducer.storeProducts,\n})\n\nconst mapDispatchToProps = {\n    billingAction\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FieldLevelValidationForm);","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport { clearProducts } from '../Action';\nimport Breadcrumb from 'react-bootstrap/Breadcrumb'\nimport { Link } from 'react-router-dom';\nclass Invoice extends Component {\n    constructor(props) {\n    super(props);\n    this.state = { \n    }\n}\n\n    emptycart = (e) => {\n    let { clearProducts } = this.props;\n    clearProducts();\n    }\n\n    handleClick = () =>{\n    this.props.history.push('/');\n    this.emptycart();\n    }   \n\nrender() { \n            let {cart} = this.props;\n            // let itemKeys = Object.keys(cart);\n    return ( \n        <>\n        <h2>Order Summary</h2>\n        <div className=\"invoice\">\n        <h3>Order Successfully placed</h3>\n\n        <Breadcrumb className=\"Breadcrumps\">\n          <Breadcrumb.Item><Link to=\"/\">Home</Link></Breadcrumb.Item>\n          <Breadcrumb.Item><Link to=\"/addtocart\">Cart</Link></Breadcrumb.Item>\n          <Breadcrumb.Item><Link to=\"/checkout\">Checkout</Link></Breadcrumb.Item>\n          <Breadcrumb.Item active>Invoice</Breadcrumb.Item>\n        </Breadcrumb>\n        <img src=\"https://media.giphy.com/media/huVMArQFzFOhl3A7By/giphy.gif\" className=\"invoice-cart\"></img>\n        {/* <img src=\"https://loading.io/spinners/shopping/lg.shopping-cart-loader-icon.gif\" className=\"invoice-cart\"></img> */}\n        <div className=\"billDetailsSubmit\">\n        \n        <p className=\"user-details\">\n        {/* { itemKeys.map(item => */}\n        <div className=\"user-detail\">\n        <h4 style={{borderBottom: '1px solid black',paddingBottom:'5px'}}>Billing Address:</h4>\n        <p>Name:{this.props.cart.username}</p>\n        <p>Email:{this.props.cart.email}</p>\n        <p>Address:{this.props.cart.address}</p>\n        <p>City:{this.props.cart.city}</p>\n        <p>Zipcode:{this.props.cart.zipcode}</p>\n        <p>Country:{this.props.cart.country}</p>\n         {/* <span>{item}</span> : <span className=\"cart-item\">{cart[item]}</span> */}\n        </div>\n        \n        </p>\n        </div>\n        </div>\n        </>\n            );\n        }\n    }\nconst mapStateToProps = (state) =>({\ncart : state.BillingAddress.tempData,\ndelete: state.cartreducer,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\nclearProducts: (data) => dispatch(clearProducts(data)),\n})\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Invoice);","import React, { Component } from 'react';\nimport {Switch, Route} from 'react-router-dom';\n// import logo from './logo.svg';\nimport './App.css';\nimport './Components/Cardstyle.css';\n// import Cartlogo from '../public/Assets/cart.svg';\nimport Cart from './Components/Cart';\nimport Addtocart from './Components/AddToCart/Addtocart';\nimport Details from './Components/Details';\nimport Form from './Components/form/form';\nimport Invoice from './Components/invoice'\nimport Breadcrumb from 'react-bootstrap/Breadcrumb'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n          <Switch>\n          <Route exact path=\"/\" component={Cart} />\n          <Route path=\"/details/:id\" component={Details} />\n          <Route path=\"/addtocart\" component={Addtocart} />\n          <Route path=\"/Checkout\" component={Form} />\n          <Route path=\"/Invoice\" component={Invoice} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","export const storeProducts = [\n    {\n    id : 1,\n    name : \"Nike\",\n    price : 500,\n    image: \"Assets/img1.jpg\",\n    inCart: 0,\n    count: 0,\n    total: 0,\n    defaultcolor : \"Blue\"\n    },\n    {\n    id : 2,\n    name : \"Addidas\",\n    price : 100,\n    image: \"Assets/img2.jpg\",\n    inCart: 0,\n    count: 0,\n    total: 0,\n    defaultcolor : \"Red\"\n    },\n    {\n    id : 3,\n    name : \"Gas\",\n    price : 200,\n    image: \"Assets/img3.jpg\",\n    inCart: 0,\n    count: 0,\n    total: 0,\n    defaultcolor : \"Yellow\"\n    },\n    {\n    id : 4,\n    name : \"Cantabil\",\n    price : 300,\n    image: \"Assets/img1.jpg\",\n    inCart: 0,\n    count: 0,\n    total: 0,\n    defaultcolor : \"Blue\"\n    },\n    {\n    id : 5,\n    name : \"Van Heusen\",\n    price : 150,\n    image: \"Assets/img2.jpg\",\n    inCart: 0,\n    count: 0,\n    total: 0,\n    defaultcolor : \"Red\"\n    },\n    {\n    id : 6,\n    name : \"Louis Philipe\",\n    price : 100,\n    image: \"Assets/img3.jpg\",\n    inCart: 0,\n    count: 0,\n    total: 0,\n    defaultcolor : \"Yellow\"\n    },\n    \n    \n    ];\n    export const detailProduct = {\n    id: 1,\n    name: \"Product Name Bla Bla\",\n    price: 9.99,\n    image: \"Assets/img1.jpg\",\n    inCart: 0,\n    count: 0,\n    total: 0,\n    defaultcolor : \"blue\"\n    };\n    \n    export const images = [\n    {\n    Blue : \"Assets/img1.jpg\",\n    Red: \"Assets/img2.jpg\",\n    Yellow : \"Assets/img3.jpg\"\n    },\n    ];\n    \n    export const color = [\n    {\n    Red: \"Red\",\n    Blue: \"Blue\",\n    Yellow: \"Yellow\",\n    }\n    ];","import {storeProducts, detailProduct, images, color} from './Components/Data';\n\nconst initialState = {storeProducts, detailProduct, images, color}\n\nconst Reducer = (state = initialState, action) =>{\n    switch(action.type) {\n        case 'PRODUCT_INFO': {\n            console.log(\"Data received by Reducer-->\",action);\n            return { state };\n        }\n        default: {\n            return state;\n        }\n    }\n}\n\nexport default Reducer;","const cartreducer = (state = [], action) => {\n\n    let cartproducts = state;\n    switch (action.type) {\n        case 'ADD_TO_CART': {\n            console.log(\"Action data id \", action.data.id);\n            console.log(\"State\", state);\n            console.log(\"cartproductssssss----->\", cartproducts);\n            cartproducts.forEach(cp => {\n                if (cp.id === action.data.id) {\n                    cp.quantity += 1;\n                    action.data.inCart = 1;\n                }\n\n            });\n\n            let temp = action.data;\n            console.log(\"Cart Reducer Data\", action.data);\n            if (action.data.inCart === 1) {\n                return cartproducts\n            }\n            else {\n                return [...state, temp];\n            }\n\n        }\n        case 'CLEAR_PRODUCTS': {\n            state.length = 0;\n            return [];\n        }\n        case 'DELETE_PRODUCT': {\n            console.log('To Be Deleted Product ID = ', action.id);\n            console.log('Item ID', state.id);\n            const itemsFiltered = state.filter(item => item.id !== action.id);\n            console.log('itemsFiltered = ', itemsFiltered);\n            return itemsFiltered;\n        }\n        case 'UPDATE_CART': {\n\n        }\n\n        case 'INCREMENT': {\n            const findItem = state.find(item => item.id === action.data.id);\n            findItem.quantity += 1;\n            return state.map(item => {\n                if (item.id === action.data.id) {\n                    console.log('inside if block of state map', action.id)\n                    return findItem\n                }\n                return item;\n            })\n        }\n        case 'DECREMENT': {\n            const findItem = state.find(item => item.id === action.data.id);\n            findItem.quantity -= 1;\n            return state.map(item => {\n                if (item.id === action.data.id) {\n                    console.log('inside if block of state map', action.id)\n                    return findItem\n                }\n                return item;\n            })\n        }\n        case 'SIZE_UPDATE': {\n            console.log('size update reducer', action.data.id);\n            const findItem = state.find(item => item.id === action.data.id);\n            findItem.size = action.data.size;\n            console.log('redux state object', state);\n            console.log('action inside size update', action)\n            return state.map(item => {\n                if (item.id === action.data.id) {\n                    console.log('inside if block of state map', action.data.id)\n                    return findItem\n                }\n                return item;\n            })\n        }\n\n        case 'COLOR_UPDATE': {\n            console.log('size update reducer', action.data.id);\n            const findItem = state.find(item => item.id === action.data.id);\n            findItem.color = action.data.color;\n            console.log('redux state object', state);\n            console.log('action inside size update', action)\n            return state.map(item => {\n                if (item.id === action.data.id) {\n                    console.log('inside if block of state map', action.data.id)\n                    return findItem\n                }\n                return item;\n            })\n        }\n        default: {\n            return state\n        }\n    }\n}\n\nexport default cartreducer","import {storeProducts, detailProduct, images, color} from './Components/Data';\n\nconst initialState = {storeProducts, detailProduct, images, color}\n\nconst productReducer = (state = initialState, action) =>{\nswitch(action.type) {\ncase 'PRODUCT_INFO': {\nconsole.log(\"Data received by Reducer-->\",action);\nreturn { state };\n}\ndefault: {\nreturn state;\n}\n}\n}\n\nexport default productReducer;","import { combineReducers } from 'redux';\nimport { createStore } from 'redux';\nimport Reducer from './Reducer';\nimport cartreducer from './cartreducer';\nimport {BillingAddress} from './BillingAddress';\nimport productReducer from './productReducer';\n\nconst rootReducer = combineReducers({\n    productReducer,\n    Reducer,\n    cartreducer,\n    BillingAddress\n})\n\nexport const store = createStore(\n    rootReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    );\n","export const BillingAddress = (state = [],action) => {\n    switch(action.type){\n    case \"CHECKOUT\":{\n    console.log(\"Checkout Reducer Called\");\n    console.log(action.data);\n    let tempData = action.data;\n    return {...state,tempData};\n    }\n    default :{\n    return state;\n    }\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport {store} from './store';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </Router>\n  ,document.getElementById('root')\n);\n"],"sourceRoot":""}